{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      co;\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: [...state.user.following, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: state.user.following.filter(following => following !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["C:/Users/Vishnu/Desktop/Others/React/Social Media/front-end/src/context/AuthReducer.jsx"],"names":["AuthReducer","state","action","type","user","isFetching","error","co","payload","following","filter"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO;AACLC,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACEC,MAAAA,EAAE;AACF,aAAO;AACLH,QAAAA,IAAI,EAAEF,MAAM,CAACM,OADR;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,eAAL;AACE,aAAO;AACLF,QAAAA,IAAI,EAAE,IADD;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEJ,MAAM,CAACM;AAHT,OAAP;;AAKF,SAAK,QAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJK,UAAAA,SAAS,EAAE,CAAC,GAAGR,KAAK,CAACG,IAAN,CAAWK,SAAf,EAA0BP,MAAM,CAACM,OAAjC;AAFP;AAFD,OAAP;;AAOF,SAAK,UAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJK,UAAAA,SAAS,EAAER,KAAK,CAACG,IAAN,CAAWK,SAAX,CAAqBC,MAArB,CACRD,SAAD,IAAeA,SAAS,KAAKP,MAAM,CAACM,OAD3B;AAFP;AAFD,OAAP;;AASF;AACE,aAAOP,KAAP;AAvCJ;AAyCD,CA1CD;;KAAMD,W;AA4CN,eAAeA,WAAf","sourcesContent":["const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true,\r\n        error: false,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      co\r\n      return {\r\n        user: action.payload,\r\n        isFetching: false,\r\n        error: false,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n      };\r\n    case \"FOLLOW\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          following: [...state.user.following, action.payload],\r\n        },\r\n      };\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          following: state.user.following.filter(\r\n            (following) => following !== action.payload\r\n          ),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n"]},"metadata":{},"sourceType":"module"}