{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vishnu\\\\Desktop\\\\Others\\\\React\\\\Social Media\\\\front-end\\\\src\\\\components\\\\navbarDropdown\\\\MenuListComposition.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./MenuListComposition.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  }\n}));\nexport default function MenuListComposition() {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const {\n    user\n  } = useContext(AuthContext);\n  const history = useHistory();\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleLogout = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n\n    try {} catch (err) {\n      console.log(history, \"this is history\");\n      localStorage.removeItem('user');\n      history.push(\"/login\");\n    }\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        ref: anchorRef,\n        \"aria-controls\": open ? \"menu-list-grow\" : undefined,\n        \"aria-haspopup\": \"true\",\n        onClick: handleToggle,\n        children: /*#__PURE__*/_jsxDEV(ArrowDropDownRoundedIcon, {\n          style: {\n            fill: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popper, {\n        open: open,\n        anchorEl: anchorRef.current,\n        role: undefined,\n        transition: true,\n        disablePortal: true,\n        children: ({\n          TransitionProps,\n          placement\n        }) => /*#__PURE__*/_jsxDEV(Grow, { ...TransitionProps,\n          style: {\n            transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n              onClickAway: handleClose,\n              children: /*#__PURE__*/_jsxDEV(MenuList, {\n                autoFocusItem: open,\n                id: \"menu-list-grow\",\n                onKeyDown: handleListKeyDown,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: `/profile/${user.username}`,\n                  className: \"dropdownMenuItemsLinks\",\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleClose,\n                    children: \"Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleLogout,\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MenuListComposition, \"6J2h4hU0Xoc2Qa5egS6gHkgrii0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = MenuListComposition;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuListComposition\");","map":{"version":3,"sources":["C:/Users/Vishnu/Desktop/Others/React/Social Media/front-end/src/components/navbarDropdown/MenuListComposition.jsx"],"names":["React","useContext","Button","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","makeStyles","ArrowDropDownRoundedIcon","AuthContext","Link","useHistory","useStyles","theme","root","display","paper","marginRight","spacing","MenuListComposition","classes","open","setOpen","useState","anchorRef","useRef","user","history","handleToggle","prevOpen","handleClose","event","current","contains","target","handleLogout","err","console","log","localStorage","removeItem","push","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","fill","TransitionProps","placement","transformOrigin","username"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./MenuListComposition.css\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const { user } = useContext(AuthContext);\r\n  const history = useHistory()\r\n\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout= (event)=>{\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n    try{\r\n\r\n    }catch(err){\r\n\r\n      console.log(history,\"this is history\");\r\n      localStorage.removeItem('user')\r\n      history.push(\"/login\")\r\n    }\r\n  }\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  // return focus to the button when we transitioned from !open -> open\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          aria-controls={open ? \"menu-list-grow\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          <ArrowDropDownRoundedIcon style={{ fill: \"white\" }} />\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"menu-list-grow\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    <Link to={`/profile/${user.username}`} className=\"dropdownMenuItemsLinks\">\r\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                    </Link>\r\n                    <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}